# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import order.order_pb2 as order__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in order_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class OrderServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Order = channel.unary_unary(
                '/OrderService/Order',
                request_serializer=order__pb2.OrderRequest.SerializeToString,
                response_deserializer=order__pb2.OrderResponse.FromString,
                _registered_method=True)
        self.GetOrderDetails = channel.unary_unary(
                '/OrderService/GetOrderDetails',
                request_serializer=order__pb2.GetOrderDetailsRequest.SerializeToString,
                response_deserializer=order__pb2.GetOrderDetailsResponse.FromString,
                _registered_method=True)
        self.Heartbeat = channel.unary_unary(
                '/OrderService/Heartbeat',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=order__pb2.HeartbeatResponse.FromString,
                _registered_method=True)
        self.NotifyReplica = channel.unary_unary(
                '/OrderService/NotifyReplica',
                request_serializer=order__pb2.NotifyReplicaRequest.SerializeToString,
                response_deserializer=order__pb2.NotifyReplicaResponse.FromString,
                _registered_method=True)
        self.ReplicateOrder = channel.unary_unary(
                '/OrderService/ReplicateOrder',
                request_serializer=order__pb2.ReplicateOrderRequest.SerializeToString,
                response_deserializer=order__pb2.ReplicateOrderResponse.FromString,
                _registered_method=True)
        self.SyncUp = channel.unary_unary(
                '/OrderService/SyncUp',
                request_serializer=order__pb2.SyncUpRequest.SerializeToString,
                response_deserializer=order__pb2.SyncUpResponse.FromString,
                _registered_method=True)


class OrderServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Order(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrderDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Heartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyReplica(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplicateOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncUp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Order': grpc.unary_unary_rpc_method_handler(
                    servicer.Order,
                    request_deserializer=order__pb2.OrderRequest.FromString,
                    response_serializer=order__pb2.OrderResponse.SerializeToString,
            ),
            'GetOrderDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrderDetails,
                    request_deserializer=order__pb2.GetOrderDetailsRequest.FromString,
                    response_serializer=order__pb2.GetOrderDetailsResponse.SerializeToString,
            ),
            'Heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.Heartbeat,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=order__pb2.HeartbeatResponse.SerializeToString,
            ),
            'NotifyReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyReplica,
                    request_deserializer=order__pb2.NotifyReplicaRequest.FromString,
                    response_serializer=order__pb2.NotifyReplicaResponse.SerializeToString,
            ),
            'ReplicateOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplicateOrder,
                    request_deserializer=order__pb2.ReplicateOrderRequest.FromString,
                    response_serializer=order__pb2.ReplicateOrderResponse.SerializeToString,
            ),
            'SyncUp': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncUp,
                    request_deserializer=order__pb2.SyncUpRequest.FromString,
                    response_serializer=order__pb2.SyncUpResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'OrderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('OrderService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class OrderService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Order(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/OrderService/Order',
            order__pb2.OrderRequest.SerializeToString,
            order__pb2.OrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOrderDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/OrderService/GetOrderDetails',
            order__pb2.GetOrderDetailsRequest.SerializeToString,
            order__pb2.GetOrderDetailsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/OrderService/Heartbeat',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            order__pb2.HeartbeatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NotifyReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/OrderService/NotifyReplica',
            order__pb2.NotifyReplicaRequest.SerializeToString,
            order__pb2.NotifyReplicaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReplicateOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/OrderService/ReplicateOrder',
            order__pb2.ReplicateOrderRequest.SerializeToString,
            order__pb2.ReplicateOrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SyncUp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/OrderService/SyncUp',
            order__pb2.SyncUpRequest.SerializeToString,
            order__pb2.SyncUpResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
